<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">

	<!--项目的全球唯一标识符-->
	<groupId>com.hanxiaozhang</groupId>
	<!--项目的构件标识符-->
	<artifactId>springboot-parent</artifactId>
	<!--项目的版本-->
	<version>0.0.1-SNAPSHOT</version>
	<!--项目的名称-->
	<name>springboot-parent</name>
	<!--项目的描述-->
	<description>Demo project for Spring Boot</description>
	<!--声明项目描述符遵循哪一个POM模型版本-->
	<modelVersion>4.0.0</modelVersion>
	<!--项目产生的构件类型，例如jar、war、ear、pom-->
	<!--父模块打包类型必须为pom-->
	<packaging>pom</packaging>
	<!-- 项目主页的URL-->
	<url> http://maven.hanxiaozhang.xyz </url>

	<!--父项目的坐标-->
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.1.9.RELEASE</version>
		<relativePath/><!-- lookup parent from repository -->
	</parent>

	<!--配置聚合模块-->
	<!--maven特点之一：聚合,聚合多个子模块-->
	<!--聚合是将多个模块组装在一起,相互协调依赖运行-->
	<modules>
		<module>../qifeng-utils</module>
		<module>../qifeng-common</module>
		<module>../springboot-httpclient</module>
		<module>../springboot-dynamic-datasource</module>
		<module>../springboot-redis</module>
		<module>../springboot-activemq</module>
		<module>../springboot-aoplog</module>
		<module>../springboot-contract-template</module>
		<module>../springboot-multi-thread</module>
		<module>../springboot-spring-knowledge</module>
		<module>../springboot-some-function</module>
		<module>../springboot-design-pattern</module>
		<module>../springboot-java-basic-note</module>
		<module>../springboot-generator-code</module>
		<module>../springboot-mongodb</module>
		<module>../springboot-netty</module>
		<module>../springboot-zookeeper</module>
		<module>../springboot-io</module>
		<module>../springboot-rabbitmq</module>
		<module>../springboot-kafka</module>
		<module>../springboot-es</module>
		<module>../springboot-mqtt</module>
		<module>../qifeng-webserver</module>
		<module>../qifeng-gateway</module>
		<module>../qifeng-arcSoftFace</module>
		<module>../qifeng-proxy</module>
	</modules>


	<!--配置变量属性-->
	<!--分类：内置属性、POM属性、自定义属性、Settings属性、Java系统属性、环境变量属性-->
	<properties>
		<!--Java系统属性-->
		<java.version>1.8</java.version>
		<!--自定义属性-->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<swagger2.version>2.6.1</swagger2.version>
		<swagger-ui.version>2.6.1</swagger-ui.version>
		<httpcore.version>4.4.6</httpcore.version>
		<httpclient.version>4.5.5</httpclient.version>
		<fastjson.version>1.2.47</fastjson.version>
		<commons-lang3>3.6</commons-lang3>
		<druid-starter.version>1.1.9</druid-starter.version>
		<mybatis.version>3.4.4</mybatis.version>
		<mybatis-starter.version>1.1.1</mybatis-starter.version>
		<poi.version>3.15</poi.version>
        <poi-ooxml.version>3.15</poi-ooxml.version>
		<poi-ooxml-schemas.version>4.1.0</poi-ooxml-schemas.version>
		<ooxml-schemas.version>1.4</ooxml-schemas.version>
		<activemq-all.version>5.15.9</activemq-all.version>
		<commons-io.version>2.5</commons-io.version>
		<version.spring-cloud>Greenwich.SR6</version.spring-cloud>
		<version.shiro>1.2.3</version.shiro>
		<version.mybatis.generator>1.3.1</version.mybatis.generator>
		<version.javax.validation>2.0.1.Final</version.javax.validation>
		<version.easyexcel>2.0.5</version.easyexcel>
		<version.hutool>5.7.7</version.hutool>

		<version.elasticsearch>7.13.4</version.elasticsearch>
		<version.guava>18.0</version.guava>
		<version.reactorcore>3.3.17.RELEASE</version.reactorcore>
		<version.druid>1.1.9</version.druid>
		<version.dubbo>2.8.4</version.dubbo>
		<version.zookeeper>3.4.6</version.zookeeper>
		<version.zkclient>0.1</version.zkclient>
		<version.feign>10.4.0</version.feign>

		<version.flume>1.7.0</version.flume>
		<version.mysql>8.0.15</version.mysql>
		<version.swger>2.8.0</version.swger>
		<version.proguard-base>6.1.1</version.proguard-base>
		<version.velocity>1.7</version.velocity>
		<version.logback-flume-appender>0.0.8</version.logback-flume-appender>
		<version.fastjson>1.2.47</version.fastjson>
		<version.miemiedev>1.2.15</version.miemiedev>
		<version.mybatis>3.4.6</version.mybatis>
		<version.mybatis-spring>1.3.2</version.mybatis-spring>
		<version.pagehelper>1.2.3</version.pagehelper>
	</properties>


	<!--配置架包依赖-->
	<!--父pom中的引入的架包依赖，子pom可以继承使用-->
	<dependencies>
		<!--依赖管理，用于管理spring-cloud的依赖-->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-dependencies</artifactId>
			<version>${version.spring-cloud}</version>
			<type>pom</type>
			<scope>import</scope>
		</dependency>

		<!-- react 反应器-->
		<dependency>
			<groupId>io.projectreactor</groupId>
			<artifactId>reactor-core</artifactId>
			<version>${version.reactorcore}</version>
		</dependency>

		<!--starter-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
		</dependency>
		<!--actuator-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<!--test-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<!--aop-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-aop</artifactId>
		</dependency>
		<!--web-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<!--thymeleaf-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
		</dependency>
		<dependency>
			<groupId>net.sourceforge.nekohtml</groupId>
			<artifactId>nekohtml</artifactId>
		</dependency>
		<!-- spring cache -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-cache</artifactId>
		</dependency>
		<!--lombok-->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- fastjson -->
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>fastjson</artifactId>
			<version>${fastjson.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>${commons-lang3}</version>
		</dependency>

		<!--poi-->
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi</artifactId>
			<version>${poi.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi-ooxml</artifactId>
			<version>${poi-ooxml.version}</version>
		</dependency>
        <!--后加的原因合同模板用到了poi的某个类，高版本没有那个类，所以降低，
        低版本支持2007+版本需要以下包20200219-->
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi-ooxml-schemas</artifactId>
			<version>${poi-ooxml-schemas.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>ooxml-schemas</artifactId>
			<version>${ooxml-schemas.version}</version>
		</dependency>

		<!--common-util-->
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>${commons-io.version}</version>
		</dependency>


		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>${version.guava}</version>
		</dependency>

		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>druid</artifactId>
			<version>${version.druid}</version>
		</dependency>

		<!-- dubbo组件 -->
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>dubbo</artifactId>
			<version>${version.dubbo}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.zookeeper</groupId>
			<artifactId>zookeeper</artifactId>
			<version>${version.zookeeper}</version>
		</dependency>
		<dependency>
			<groupId>com.github.sgroschupf</groupId>
			<artifactId>zkclient</artifactId>
			<version>${version.zkclient}</version>
		</dependency>

		<!--  shiro  -->
		<dependency>
			<groupId>org.apache.shiro</groupId>
			<artifactId>shiro-web</artifactId>
			<version>${version.shiro}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.shiro</groupId>
			<artifactId>shiro-core</artifactId>
			<version>${version.shiro}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.shiro</groupId>
			<artifactId>shiro-spring</artifactId>
			<version>${version.shiro}</version>
		</dependency>

		<!--  mybatis  -->
		<dependency>
			<groupId>org.mybatis.spring.boot</groupId>
			<artifactId>mybatis-spring-boot-starter</artifactId>
			<version>${version.mybatis-spring}</version>
		</dependency>
		<dependency>
			<groupId>org.mybatis</groupId>
			<artifactId>mybatis-spring</artifactId>
			<version>${version.mybatis-spring}</version>
		</dependency>
		<dependency>
			<groupId>org.mybatis</groupId>
			<artifactId>mybatis</artifactId>
			<version>${version.mybatis}</version>
		</dependency>
		<dependency>
			<groupId>com.github.miemiedev</groupId>
			<artifactId>mybatis-paginator</artifactId>
			<version>${version.miemiedev}</version>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>${version.mysql}</version>
		</dependency>
		<dependency>
			<groupId>com.github.pagehelper</groupId>
			<artifactId>pagehelper-spring-boot-starter</artifactId>
			<version>${version.pagehelper}</version>
		</dependency>

		<dependency>
			<groupId>org.apache.velocity</groupId>
			<artifactId>velocity</artifactId>
			<version>${version.velocity}</version>
		</dependency>

		<dependency>
			<groupId>io.github.openfeign</groupId>
			<artifactId>feign-core</artifactId>
			<version>${version.feign}</version>
		</dependency>
		<dependency>
			<groupId>io.github.openfeign</groupId>
			<artifactId>feign-gson</artifactId>
			<version>${version.feign}</version>
		</dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-openfeign-core</artifactId>
            <version>2.1.5.RELEASE</version>
        </dependency>
		<!-- swger api -->
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger2</artifactId>
			<version>${version.swger}</version>
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger-ui</artifactId>
			<version>${version.swger}</version>
		</dependency>

		<!-- elastic search -->
		<dependency>
			<groupId>org.elasticsearch.client</groupId>
			<artifactId>elasticsearch-rest-high-level-client</artifactId>
			<version>${version.elasticsearch}</version>
		</dependency>
		<dependency>
			<groupId>org.elasticsearch</groupId>
			<artifactId>elasticsearch</artifactId>
			<version>${version.elasticsearch}</version>
		</dependency>
		<dependency>
			<groupId>org.elasticsearch.client</groupId>
			<artifactId>elasticsearch-rest-client</artifactId>
			<version>${version.elasticsearch}</version>
		</dependency>

		<dependency>
			<groupId>org.apache.flume</groupId>
			<artifactId>flume-ng-sdk</artifactId>
			<version>${version.flume}</version>
		</dependency>

		<dependency>
			<groupId>net.sf.proguard</groupId>
			<artifactId>proguard-base</artifactId>
			<version>${version.proguard-base}</version>
		</dependency>

		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>${lombok.version}</version>
		</dependency>

		<dependency>
			<groupId>com.gilt.logback</groupId>
			<artifactId>logback-flume-appender</artifactId>
			<version>${version.logback-flume-appender}</version>
		</dependency>


		<dependency>
			<groupId>org.mybatis.generator</groupId>
			<artifactId>mybatis-generator-core</artifactId>
			<version>${version.mybatis.generator}</version>
		</dependency>


		<dependency>
			<groupId>javax.validation</groupId>
			<artifactId>validation-api</artifactId>
			<version>${version.javax.validation}</version>
		</dependency>

		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>easyexcel</artifactId>
			<version>${version.easyexcel}</version>
		</dependency>

		<dependency>
			<groupId>cn.hutool</groupId>
			<artifactId>hutool-all</artifactId>
			<version>${version.hutool}</version>
		</dependency>

	</dependencies>


	<!--配置架包版本管理-->
	<!--架包版本管理器：只对版本进行管理，不会实际引入，在<dependencies>依赖才引用-->
	<!--作用:子pom中可能引用的架包依赖,在这里声明,进行统一管理。子pom引用时,不用加<version>-->
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>com.hanxiaozhang</groupId>
				<artifactId>springboot-utils</artifactId>
				<version>${project.version}</version>
			</dependency>
			<!--swagger2-->
			<dependency>
				<groupId>io.springfox</groupId>
				<artifactId>springfox-swagger2</artifactId>
				<version>${swagger2.version}</version>
			</dependency>
			<dependency>
				<groupId>io.springfox</groupId>
				<artifactId>springfox-swagger-ui</artifactId>
				<version>${swagger-ui.version}</version>
			</dependency>
			<!-- http feign -->
			<dependency>
				<groupId>org.apache.httpcomponents</groupId>
				<artifactId>httpclient</artifactId>
				<version>${httpclient.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.httpcomponents</groupId>
				<artifactId>httpcore</artifactId>
				<version>${httpcore.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.httpcomponents</groupId>
				<artifactId>httpmime</artifactId>
				<version>${httpclient.version}</version>
			</dependency>
			<!--druid-->
			<dependency>
				<groupId>com.alibaba</groupId>
				<artifactId>druid-spring-boot-starter</artifactId>
				<version>${druid-starter.version}</version>
			</dependency>
			<!--mybatis-->
			<dependency>
				<groupId>org.mybatis</groupId>
				<artifactId>mybatis</artifactId>
				<version>${mybatis.version}</version>
			</dependency>
			<dependency>
				<groupId>org.mybatis.spring.boot</groupId>
				<artifactId>mybatis-spring-boot-starter</artifactId>
				<version>${mybatis-starter.version}</version>
			</dependency>
			<!--activemq  original or spring-->
			<dependency>
				<groupId>org.apache.activemq</groupId>
				<artifactId>activemq-all</artifactId>
				<version>${activemq-all.version}</version>
			</dependency>
			<!--common-util-->
			<dependency>
				<groupId>commons-io</groupId>
				<artifactId>commons-io</artifactId>
				<version>${commons-io.version}</version>
			</dependency>
		</dependencies>
	</dependencyManagement>


	<!--配置maven架包的远程仓库-->
	<!--作用:下载maven架包-->
	<repositories>
		<repository>
			<id>public</id>
			<name>aliyun nexus</name>
			<url>http://maven.aliyun.com/nexus/content/groups/public/</url>
			<releases>
				<enabled>true</enabled>
			</releases>
		</repository>
	</repositories>


	<!--配置maven插件的远程仓库-->
	<!--作用：下载maven plugin-->
	<pluginRepositories>
		<pluginRepository>
			<id>public</id>
			<name>aliyun nexus</name>
			<url>http://maven.aliyun.com/nexus/content/groups/public/</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</pluginRepository>
	</pluginRepositories>


	<!-- 配置构建项目信息-->
	<build>

		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>

		<!--maven plugin版本管理，功能与<dependencyManagement>相似-->
		<pluginManagement>
			<!--该项目使用的插件列表-->
			<plugins>
				<plugin>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-maven-plugin</artifactId>
					<executions>
						<execution>
							<goals>
								<goal>
									repackage
								</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
			</plugins>
		</pluginManagement>

	</build>

</project>
